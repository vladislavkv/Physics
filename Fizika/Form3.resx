<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="label1.Text" xml:space="preserve">
    <value>Согласно современным представлениям, атом состоит из ядра и расположенных вокруг него
электронов. Ядро атома, в свою очередь, состоит из более малых элементарных частиц ‒ из
определенного количества протонов и нейтронов.
</value>
  </data>
  <data name="label2.Text" xml:space="preserve">
    <value>Количество протонов в ядре определяет строение электронной оболочки атома. А электронная
оболочка определяет физико-химические свойства вещества. Число протонов соответствует
порядковому номеру атома в периодической системе химических элементов Менделеева,
именуется также зарядовое число, атомный номер, атомное число. Например, число протонов
у атома Гелия – 2. В периодической таблице он стоит под номером 2 и обозначается как He2
Символом для обозначения количества протонов служит латинская буква Z. При записи формул
зачастую цифра, указывающая на количество протонов, располагается снизу от символа элемента
либо справа, либо слева: He2 / 2He</value>
  </data>
  <data name="label3.Text" xml:space="preserve">
    <value>Количество нейтронов соответствует определённому изотопу того или иного элемента.
Изотопы – это элементы с одинаковым атомным номером (одинаковым количеством протонов и
электронов), но с разным массовым числом. Массовое число – общее количество нейтронов и
протонов в ядре атома (обозначается латинской буквой А). При записи формул массовое число
указывается вверху символа элемента с одной из сторон: He42/42He (Изотоп Гелия – Гелий - 4)</value>
  </data>
  <data name="label4.Text" xml:space="preserve">
    <value>Таким образом, чтобы узнать число нейтронов в том или ином изотопе, следует от общего
массового числа отнять число протонов. Например, нам известно, что в атоме Гелия-4 He42
cодержится 4 элементарные частицы, так как массовое число изотопа – 4 . При этом нам известно,
что He42 меет 2 протона. Отняв от 4 (общее массовое число) 2 (кол-во протонов) получаем
2 – количество нейтронов в ядре Гелия-4.</value>
  </data>
  <data name="label5.Text" xml:space="preserve">
    <value>В качестве примера мы не случайно рассмотрели Гелий-4 (He42), ядро которого состоит из двух
протонов и двух нейтронов. Поскольку ядро Гелия-4, именуемое альфа-частицей (α-частица)
обладает наибольшей эффективностью в ядерных реакциях, его часто используют для
экспериментов в этом направлении. Стоит отметить, что в формулах ядерных реакций зачастую
вместо He42 используется символ α.</value>
  </data>
  <data name="label6.Text" xml:space="preserve">
    <value>Именно с участием альфа-частиц была проведена Э. Резерфордом первая в официальной
истории физики реакция ядерного превращения. В ходе реакции α-частицами (He42)
«бомбардировались» ядра изотопа азота (N147), вследствие чего образовался изотоп оксигена
(O178) и один протон (p11)</value>
  </data>
</root>